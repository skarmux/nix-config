{ device ? "/dev/vda",
  encrypted ? false,
  impermanence ? false,
  ssd ? true,
  ssdOptions ? [ ],
  lib ? import <nixpkgs/lib>,
  ...
}: with lib;
let
  mountOptions = [ "compress-zstd" "noatime" ];
  subvolumes = mkMerge [
    {
      "/root" = { mountpoint = "/"; inherit mountOptions; };
      "/nix" = { mountpoint = "/nix"; inherit mountOptions; };
      "/home" = { mountpoint = "/home"; inherit mountOptions; };
    }
    (mkIf impermanence {
      "/persist" = { mountpoint = "/persist"; inherit mountOptions; };
    })
  ];
in
{
  # imports = [ inputs.disko.nixosModules.disko ];

  disko.devices.disk.main = {
    type = "disk";
    device = device;
    content = {
      type = "gpt";
      partitions = mkMerge [
        {
          ESP = {
            type = "EF00";
            size = "512M";
            content = {
              type = "filesystem";
              format = "vfat";
              mountpoint = "/boot";
              mountOptions = [ "umask=0077" ];
            };
          };
        }
        (mkIf (!encrypted) {
          root = {
            size = "100%";
            type = "8300";
            content = {
              type = "btrfs";
              inherit subvolumes;
            };
          };
        })
        (mkIf (encrypted) {
          luks = {
            size = "100%";
            content = {
              type = "luks";
              name = "crypted";
              # disable settings.keyFile if you want to use interactive password entry
              # passwordFile = "/tmp/secret.key"; # Interactive TODO needs to be generated by script
              settings = { allowDiscards = true; };
              content = {
                type = "btrfs";
                extraArgs = [ "-f" ]; # Override existing partition
                inherit subvolumes;
              };
            };
          };
        })
      ];
    };
  };
  fileSystems."/persist".neededForBoot = true;
}
